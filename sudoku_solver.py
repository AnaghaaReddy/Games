# -*- coding: utf-8 -*-
"""Sudoku_solver.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oI3TTcK_FXQEwjOt89m-jMje7Wmk4WM6
"""

def isvalid_move(grid,row,col,number):
    for x in range(9):
        if grid[row][x]== number:
            return False
  
    for x in range(9):
        if grid[x][col]== number:
            return False
  
    edge_row=row-row % 3
    edge_col=col-col % 3
    
    for x in range(3):
        for y in range(3):
            if grid[edge_row+x][edge_col+y] == number:
                return False
    return True

def solver(grid,row,col):
    
    if col==9:
        if row==8:
            return True
        
        row+=1
        col=0
    
    if grid[row][col]>0:
        return solver(grid,row,col+1)
        
    for num in range(1,10):
        if isvalid_move(grid,row,col,num):
            grid[row][col]=num
            
            if solver(grid,row,col+1):
                return True
        
        grid[row][col]=0 
    return False
    
grid=[[2, 5, 0, 0, 3, 0, 9, 0, 1],
        [0, 1, 0, 0, 0, 4, 0, 0, 0],
    [4, 0, 7, 0, 0, 0, 2, 0, 8],
    [0, 0, 5, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 9, 8, 1, 0, 0],
    [0, 4, 0, 0, 0, 3, 0, 0, 0],
    [0, 0, 0, 3, 6, 0, 0, 7, 2],
    [0, 7, 0, 0, 0, 0, 0, 0, 3],
    [9, 0, 3, 0, 0, 0, 6, 0, 4]]
    
if solver(grid,0,0):
    for i in range(9):
        for j in range(9):
            print(grid[i][j],end=" ")
        print()
        
else:
    print("No solution for this !!")

